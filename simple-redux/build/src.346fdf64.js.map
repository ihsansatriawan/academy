{"version":3,"sources":["src/redux.js","src/index.js"],"names":["createStore","reducer","state","undefined","type","listeners","getState","dispatch","action","forEach","listener","subscribe","filter","item","store","render","document","body","innerText","addEventListener"],"mappings":";AAAO,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,IAAMA,EAAc,SAAAC,GACrBC,IAAAA,EAAQD,OAAQE,EAAW,CAAEC,KAAM,UACnCC,EAAY,GAgBT,MAAA,CAAEC,SAdQ,WAAMJ,OAAAA,GAcJK,SAZF,SAAAC,GACfN,EAAQD,EAAQC,EAAOM,GACvBH,EAAUI,QAAQ,SAAAC,GAAYA,OAAAA,OAUHC,UAPX,SAAAD,GAET,OADPL,EAAgBA,GAAAA,OAAAA,EAAAA,GAAWK,CAAAA,IACpB,WACLL,EAAYA,EAAUO,OAAO,SAAAC,GAAQA,OAAAA,IAASH,QAd7C,QAAA,YAAA;;ACuBP,aAvBA,IAAA,EAAA,QAAA,WAEMT,EAAU,WAACC,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACfM,QAD6B,UAAA,OAAA,EAAA,UAAA,QAAA,GACtBJ,MACR,IAAA,YACIF,OAAAA,EAAQ,EACZ,IAAA,YACIA,OAAAA,EAAQ,EACjB,QACSA,OAAAA,IAIPY,GAAQ,EAAYb,EAAAA,aAAAA,GAEpBc,EAAS,WACPb,IAAAA,EAAQY,EAAMR,WACpBU,SAASC,KAAKC,UAAYhB,GAG5BY,EAAMH,UAAUI,GAChBA,IAEAC,SAASG,iBAAiB,QAAS,WACjCL,EAAMP,SAAS,CAAEH,KAAM","file":"src.346fdf64.js","sourceRoot":"..","sourcesContent":["export const createStore = reducer => {\n  let state = reducer(undefined, { type: \"@INIT\" });\n  let listeners = [];\n\n  const getState = () => state;\n\n  const dispatch = action => {\n    state = reducer(state, action);\n    listeners.forEach(listener => listener());\n  };\n\n  const subscribe = listener => {\n    listeners = [...listeners, listener];\n    return () => {\n      listeners = listeners.filter(item => item !== listener);\n    };\n  };\n\n  return { getState, dispatch, subscribe };\n};\n","import { createStore } from \"./redux\";\n\nconst reducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst render = () => {\n  const state = store.getState();\n  document.body.innerText = state;\n};\n\nstore.subscribe(render);\nrender();\n\ndocument.addEventListener(\"click\", () => {\n  store.dispatch({ type: \"INCREMENT\" });\n});\n"]}